/*! nodeJS-Server - v0.0.1 - 2015-05-26 */
var express=require("express"),app=express(),bodyParser=require("body-parser"),Book=require("./models/book"),error={type:"error",statusCode:404,msg:"Requested resource not found"};app.use(bodyParser.urlencoded({extended:!0})),app.use(bodyParser.json());var mongoose=require("mongoose");mongoose.connect("mongodb://localhost/mme-ii");var args=process.argv.slice(2),port=parseInt(args[0],10)||1337,router=express.Router();router.get("/",function(a,b){"use strict";b.json({message:"hello world"})}),router.route("/books").post(function(a,b){"use strict";var c=new Book;c.name=a.body.name,c.release=a.body.release,c.publisher=a.body.publisher,c.language=a.body.language,c.author=a.body.author,c.updated=new Date,c.save(function(a){return a?b.json(error):void b.json({message:"created book",item:c})})}).get(function(a,b){"use strict";Book.find(function(a,c){return a?b.json(error):void b.json(c)})}),router.route("/books/:book_id").get(function(a,b){"use strict";Book.findById(a.params.book_id,function(a,c){return a?b.json(error):null===c?b.json(error):void b.json({message:"found book",item:c})})}).put(function(a,b){"use strict";Book.findById(a.params.book_id,function(c,d){return c?b.json(error):(d.name=a.body.name,d.release=a.body.release,d.publisher=a.body.publisher,d.language=a.body.language,d.author=a.body.author,d.updated=new Date,void d.save(function(a){return a?b.json(error):void b.json({message:"updated book",item:d})}))})})["delete"](function(a,b){"use strict";Book.remove({_id:a.params.book_id},function(c,d){c&&b.json(error),b.json({message:"deleted book",deleted:!0,itemId:a.params.book_id})})}),app.use("/api",router);var server=app.listen(port,function(){"use strict";var a=server.address().port;console.log("server listening at http://localhost:%s",a)});